{"version":3,"file":"signup.bundle.js","mappings":";;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C,8BAA8B,eAAe;AAC7C,sCAAsC,mBAAmB;AACzD,iCAAiC,kBAAkB;AACnD,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://my-project/./signup/signup.ts"],"sourcesContent":["\"use strict\";\r\n// Name Error Validation\r\nfunction nameError(event) {\r\n    const input = event.value.trim();\r\n    const error = document.getElementById('name-error');\r\n    if (input === '') {\r\n        error.innerText = \"Enter a name..\";\r\n        return false;\r\n    }\r\n    else {\r\n        error.innerText = \"\";\r\n        return true;\r\n    }\r\n}\r\n// Date of Birth Error Validation\r\nfunction dateError(event) {\r\n    const input = event.value.trim();\r\n    const error = document.getElementById('date-error');\r\n    if (input === '') {\r\n        error.innerText = \"Enter a Date of Birth..\";\r\n        return false;\r\n    }\r\n    else {\r\n        error.innerText = \"\";\r\n        return true;\r\n    }\r\n}\r\n// Email Error Validation\r\nfunction emailError(event) {\r\n    const input = event.value.trim();\r\n    const error = document.getElementById('email-error');\r\n    const allUsersJson = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    function emailExistornot() {\r\n        return allUsersJson.some(user => user.userEmail === input);\r\n    }\r\n    if (input === '') {\r\n        error.innerText = \"Enter an Email..\";\r\n        return false;\r\n    }\r\n    else if (emailExistornot()) {\r\n        error.innerText = \"Email already Exists..\";\r\n        return false;\r\n    }\r\n    else {\r\n        error.innerText = \"\";\r\n        return true;\r\n    }\r\n}\r\n// Password Error Validation\r\nfunction passwordInputError() {\r\n    const password = document.querySelector('.user-password').value.trim();\r\n    const confirmPassword = document.querySelector('.confirm-password').value.trim();\r\n    const errorElement = document.getElementById('password-error');\r\n    if (password !== confirmPassword) {\r\n        errorElement.innerText = \"Passwords do not match\";\r\n        return false;\r\n    }\r\n    else {\r\n        errorElement.innerText = \"\";\r\n        return true;\r\n    }\r\n}\r\n// Create User Object\r\nclass CreateUser {\r\n    constructor(userName, userEmail, userBirthDate, userPassword, userRole = \"user\") {\r\n        this.userName = userName;\r\n        this.userEmail = userEmail;\r\n        this.userBirthDate = userBirthDate;\r\n        this.userPassword = userPassword;\r\n        this.userRole = userRole;\r\n    }\r\n    displayData() {\r\n        console.log(`Name: ${this.userName}`);\r\n        console.log(`Email: ${this.userEmail}`);\r\n        console.log(`Date of Birth: ${this.userBirthDate}`);\r\n        console.log(`Password: ${this.userPassword}`);\r\n        console.log(`Role: ${this.userRole}`);\r\n    }\r\n    toPlainObject() {\r\n        return {\r\n            userName: this.userName,\r\n            userEmail: this.userEmail,\r\n            userBirthDate: this.userBirthDate,\r\n            userPassword: this.userPassword,\r\n            userRole: this.userRole\r\n        };\r\n    }\r\n}\r\n// Add User to Local Storage\r\nfunction addUser(event) {\r\n    event.preventDefault();\r\n    const userName = document.getElementById('user-name');\r\n    const userEmail = document.getElementById('user-mail');\r\n    const userBirthDate = document.getElementById('user-birth-date');\r\n    const userPassword = document.getElementById('user-password');\r\n    const nameValid = nameError(userName);\r\n    const emailValid = emailError(userEmail);\r\n    const dateValid = dateError(userBirthDate);\r\n    const passwordValid = passwordInputError();\r\n    if (nameValid && emailValid && dateValid && passwordValid) {\r\n        const allUsersJson = JSON.parse(localStorage.getItem(\"users\") || \"[]\").map((user) => new CreateUser(user.userName, user.userEmail, user.userBirthDate, user.userPassword, user.userRole));\r\n        const newUser = new CreateUser(userName.value, userEmail.value, userBirthDate.value, userPassword.value);\r\n        allUsersJson.push(newUser); // Push `CreateUser` instance\r\n        localStorage.setItem(\"users\", JSON.stringify(allUsersJson.map(user => user.toPlainObject())));\r\n        alert(\"Account created...!\");\r\n        window.location.href = \"../login/login.html\";\r\n    }\r\n    else {\r\n        alert(\"Please correct the errors in the form.\");\r\n    }\r\n}\r\n// By Default Add Admin User\r\nwindow.addEventListener('load', () => {\r\n    const allUsersJson = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    if (allUsersJson.length === 0) {\r\n        const adminUser = new CreateUser('Admin', 'akashkce123@gmail.com', '2003-10-09', 'Akash@2003', 'admin');\r\n        localStorage.setItem(\"users\", JSON.stringify([adminUser.toPlainObject()]));\r\n    }\r\n    // Attach event listeners\r\n    const userNameInput = document.getElementById('user-name');\r\n    const userEmailInput = document.getElementById('user-mail');\r\n    const userBirthDateInput = document.getElementById('user-birth-date');\r\n    const confirmPasswordInput = document.getElementById('confirm-password');\r\n    const signupButton = document.querySelector('.signup-btn button');\r\n    if (userNameInput && userEmailInput && userBirthDateInput && confirmPasswordInput && signupButton) {\r\n        userNameInput.addEventListener('blur', () => nameError(userNameInput));\r\n        userEmailInput.addEventListener('blur', () => emailError(userEmailInput));\r\n        userBirthDateInput.addEventListener('blur', () => dateError(userBirthDateInput));\r\n        confirmPasswordInput.addEventListener('blur', passwordInputError);\r\n        signupButton.addEventListener('click', addUser);\r\n    }\r\n});\r\n"],"names":[],"sourceRoot":""}