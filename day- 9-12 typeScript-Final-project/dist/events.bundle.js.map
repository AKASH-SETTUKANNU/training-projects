{"version":3,"file":"events.bundle.js","mappings":";;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,eAAe;AAClD,mCAAmC,eAAe;AAClD,0CAA0C,sBAAsB;AAChE,qCAAqC,iBAAiB;AACtD,uCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://my-project/./events/events.ts"],"sourcesContent":["\"use strict\";\r\n// Menu display area\r\nconst menu = document.querySelector('menu');\r\nconst menuIcon = document.querySelector('#menu-icon');\r\n// Event display areas\r\nconst addEventArea = document.getElementById(\"event-add-block\");\r\nconst notificationArea = document.getElementById(\"notification-display\");\r\nconst logoutArea = document.getElementById(\"profile-edit-area\");\r\n// Toggle menu display\r\nfunction menubarDisplay() {\r\n    if (menu.style.display === 'none' || menu.style.display === '') {\r\n        menu.style.display = 'block';\r\n        addEventArea.style.display = 'none';\r\n        notificationArea.style.display = 'none';\r\n        logoutArea.style.display = 'none';\r\n    }\r\n    else {\r\n        menu.style.display = 'none';\r\n    }\r\n}\r\n// Redirect to add event page\r\nfunction addEvent() {\r\n    window.location.href = \"../events/events.html\";\r\n}\r\n// Toggle notification display\r\nfunction displayNotification() {\r\n    if (notificationArea.style.display === 'none' || notificationArea.style.display === '') {\r\n        notificationArea.style.display = 'block';\r\n        addEventArea.style.display = 'none';\r\n        logoutArea.style.display = 'none';\r\n    }\r\n    else {\r\n        notificationArea.style.display = 'none';\r\n    }\r\n}\r\n// Toggle logout display\r\nfunction displayLogout() {\r\n    if (logoutArea.style.display === 'none' || logoutArea.style.display === '') {\r\n        logoutArea.style.display = 'flex';\r\n        addEventArea.style.display = 'none';\r\n        notificationArea.style.display = 'none';\r\n    }\r\n    else {\r\n        logoutArea.style.display = 'none';\r\n    }\r\n}\r\n// Get data from form\r\nconst eventName = document.getElementById(\"event-name\");\r\nconst eventDate = document.getElementById(\"event-date\");\r\nconst eventDescription = document.getElementById(\"event-description\");\r\nconst eventStatus = document.getElementById(\"event-status\");\r\nconst eventCategory = document.getElementById(\"event-category\");\r\nvar saveEventBtn = document.getElementById(\"save-btn\");\r\neventName.addEventListener(\"onblur\", nameCheck);\r\neventDate.addEventListener(\"onblur\", dateCheck);\r\neventDescription.addEventListener(\"onblur\", descriptionCheck);\r\neventCategory.addEventListener(\"onblur\", categoryCheck);\r\neventStatus.addEventListener(\"onblur\", statusCheck);\r\nsaveEventBtn.addEventListener(\"onclick\", saveEvent);\r\nconst nameError = document.getElementById(\"name-error\");\r\nconst dateError = document.getElementById(\"date-error\");\r\nconst descriptionError = document.getElementById(\"description-error\");\r\nconst eventstatusError = document.getElementById(\"status-error\");\r\nconst categoryError = document.getElementById(\"category-error\");\r\nconst successMessage = document.getElementById(\"success-message\");\r\n// Check for event name\r\nfunction nameCheck() {\r\n    const name = eventName.value.trim();\r\n    if (name === '') {\r\n        nameError.innerHTML = \"Enter Event Name...\";\r\n        return false;\r\n    }\r\n    else {\r\n        nameError.innerHTML = \"\";\r\n        return true;\r\n    }\r\n}\r\n// Check for event date\r\nfunction dateCheck() {\r\n    const date = eventDate.value.trim();\r\n    if (date === '') {\r\n        dateError.innerHTML = \"Enter Event Date...\";\r\n        return false;\r\n    }\r\n    else {\r\n        dateError.innerHTML = \"\";\r\n        return true;\r\n    }\r\n}\r\n// Check for event description\r\nfunction descriptionCheck() {\r\n    const description = eventDescription.value.trim();\r\n    if (description === '') {\r\n        descriptionError.innerHTML = \"Enter Event Description...\";\r\n        return false;\r\n    }\r\n    else {\r\n        descriptionError.innerHTML = \"\";\r\n        return true;\r\n    }\r\n}\r\n// Check for event status\r\nfunction statusCheck() {\r\n    const status = eventStatus.value.trim();\r\n    if (status === '') {\r\n        eventstatusError.innerHTML = \"Enter Event Status...\";\r\n        return false;\r\n    }\r\n    else {\r\n        eventstatusError.innerHTML = \"\";\r\n        return true;\r\n    }\r\n}\r\n// Check for event category\r\nfunction categoryCheck() {\r\n    const category = eventCategory.value.trim();\r\n    if (category === '') {\r\n        categoryError.innerHTML = \"Enter Event Category...\";\r\n        return false;\r\n    }\r\n    else {\r\n        categoryError.innerHTML = \"\";\r\n        return true;\r\n    }\r\n}\r\n// Create object for event\r\nclass EventDetails {\r\n    constructor(eventName, eventDate, eventDescription, eventStatus, eventCategory) {\r\n        this.eventName = eventName;\r\n        this.eventDate = eventDate;\r\n        this.eventDescription = eventDescription;\r\n        this.eventStatus = eventStatus;\r\n        this.eventCategory = eventCategory;\r\n    }\r\n    displayData() {\r\n        console.log(`Event Name: ${this.eventName}`);\r\n        console.log(`Event Date: ${this.eventDate}`);\r\n        console.log(`Event Description: ${this.eventDescription}`);\r\n        console.log(`Event Status: ${this.eventStatus}`);\r\n        console.log(`Event Category: ${this.eventCategory}`);\r\n    }\r\n    toPlainObject() {\r\n        return {\r\n            eventName: this.eventName,\r\n            eventDate: this.eventDate,\r\n            eventDescription: this.eventDescription,\r\n            eventStatus: this.eventStatus,\r\n            eventCategory: this.eventCategory\r\n        };\r\n    }\r\n}\r\n// Save event to localStorage\r\nfunction saveEvent(event) {\r\n    event.preventDefault();\r\n    if (nameCheck() && dateCheck() && descriptionCheck() && statusCheck() && categoryCheck()) {\r\n        const newEvent = new EventDetails(eventName.value, eventDate.value, eventDescription.value, eventStatus.value, eventCategory.value);\r\n        newEvent.displayData();\r\n        const newEventObject = newEvent.toPlainObject();\r\n        const allUsersJson = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n        const loggedInUserEmail = localStorage.getItem(\"loggedInUserEmail\");\r\n        if (loggedInUserEmail) {\r\n            const user = allUsersJson.find((user) => user.userEmail === loggedInUserEmail);\r\n            if (user) {\r\n                if (!user.events) {\r\n                    user.events = [];\r\n                }\r\n                user.events.push(newEventObject);\r\n                localStorage.setItem(\"users\", JSON.stringify(allUsersJson));\r\n                eventName.value = \"\";\r\n                eventDate.value = \"\";\r\n                eventDescription.value = \"\";\r\n                eventStatus.value = \"\";\r\n                eventCategory.value = \"\";\r\n                setTimeout(() => {\r\n                    successMessage.innerHTML = \"Event Added Successfully...\";\r\n                }, 3000);\r\n            }\r\n            else {\r\n                console.error(\"User not found.\");\r\n            }\r\n        }\r\n        else {\r\n            console.error(\"Logged in user email not found.\");\r\n        }\r\n    }\r\n    else {\r\n        setTimeout(() => {\r\n            categoryError.innerHTML = \"Enter all required fields.\";\r\n        }, 3000);\r\n    }\r\n}\r\n// Load and display user profile details\r\nfunction loadUserProfile() {\r\n    const allUsersJson = JSON.parse(localStorage.getItem(\"users\") || \"[]\");\r\n    const loggedInUserEmail = localStorage.getItem(\"loggedInUserEmail\");\r\n    if (loggedInUserEmail) {\r\n        const user = allUsersJson.find((user) => user.userEmail === loggedInUserEmail);\r\n        console.log(\"Logged In User Email:\", loggedInUserEmail);\r\n        console.log(\"User Object:\", user);\r\n        const profileName = document.getElementById(\"profile-name\");\r\n        const dateOfBirth = document.getElementById(\"profile-dateOfBirth\");\r\n        if (user) {\r\n            if (profileName && dateOfBirth) {\r\n                profileName.innerText = user.userName;\r\n                dateOfBirth.innerText = user.userBirthDate;\r\n            }\r\n            else {\r\n                console.error(\"Profile elements not found.\");\r\n            }\r\n        }\r\n        else {\r\n            console.error(\"User not found in localStorage.\");\r\n        }\r\n    }\r\n    else {\r\n        console.error(\"Logged in user email not found.\");\r\n    }\r\n}\r\n// Function to populate the select options with event statuses\r\nfunction populateEventStatusOptions() {\r\n    const eventStatusSelect = document.getElementById(\"event-category\");\r\n    if (eventStatusSelect) {\r\n        // Retrieve events from localStorage\r\n        const allEvents = JSON.parse(localStorage.getItem(\"EventItems\") || \"[]\");\r\n        // Clear existing options\r\n        eventStatusSelect.innerHTML = `\r\n           <option value=\"conference\">Conference</option>\r\n                  <option value=\"wedding\">wedding</option>\r\n                  <option value=\"birthday\">Birthday</option>\r\n        `;\r\n        // Populate options based on events\r\n        allEvents.forEach(event => {\r\n            const option = document.createElement(\"option\");\r\n            option.value = event.name;\r\n            option.textContent = event.name;\r\n            eventStatusSelect.appendChild(option);\r\n        });\r\n    }\r\n    else {\r\n        console.error('Element with ID \"event-status\" not found.');\r\n    }\r\n}\r\n// Call functions on page load\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    loadUserProfile();\r\n    populateEventStatusOptions();\r\n});\r\n"],"names":[],"sourceRoot":""}